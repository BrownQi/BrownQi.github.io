{"pages":[{"title":"标签","text":"","link":"/tags/index.html"},{"title":"分类","text":"","link":"/categories/index.html"}],"posts":[{"title":"使用hexo搭建个人博客","text":"使用hexo框架搭在windows平台建个人博客，并部署到github。 1. 安装node.js1.1 下载地址node.js 1.2 确认是否安装成功终端下 1node -v 1npm -v 1.3 利用npm安装cnpm(利用淘宝源)1npm install -g cnpm --registry=https://registry.npm.taobao.org 2. 安装hexo1cnpm install -g hexo-cli 3. 配置个人博客3.1 创建本地博客目录1mkdir blog 3.2 初始化hexo个人博客1hexo init 4. hexo常用命令4.1 创建新的文章1hexo n &quot;newBlog&quot; 4.2 生成博客1hexo g 4.3启动博客（本地预览）1hexo s 127.0.0.1:4000 4.4 部署到远端（使用git）1hexo d 5. 部署到github5.1 安装git bashgit bash 下载链接 配置 git 账户、邮箱 123git config --global user.name &quot;yourName&quot;git config --global user.email &quot;yourEmail&quot; 查看设置 1git config --list 5.2 创建新的仓库Repository name : ‘Owner’.github.io 5.3 安装hexo-deployer-git1cnpm install --save hexo-deployer-git 5.4 设置_config.yml1234deploy: type: git repo: 仓库地址 brach: master 5.5 部署到远端1hexo d 参考手把手教你从0开始搭建自己的个人博客 |无坑版视频教程| hexo|codesheep","link":"/2019/10/08/hexo-blog/"},{"title":"Downloads","text":"相关内容下载链接 oracle相关oracle11g官方文档中英对照版提取码：vb3a oracle11g_x64 提取码：uyf6","link":"/2019/10/09/Downloads/"},{"title":"oracle练习_1","text":"oracle课后练习。 使用SqlBeautifier格式化登录数据库，完成以下题目 -- 1、显示所有部门名SELECT *FROM dept; -- 2、显示所有雇员名及其全年收入(工资+补助)，并指定列别名“年收入”SELECT ename , sal*12+nvl(comm,0) AS \"年收入\"FROM emp; -- 3、显示存在雇员的所有部门号SELECT DISTINCT deptnoFROM empWHERE ename IS NOT NULL; -- 4、显示工资超过2850的雇员名和工资SELECT ename , salFROM empWHERE sal &gt; 2850 ; -- 5、显示工资不在1500到2850之间的所有雇员名及工资SELECT ename , salFROM empWHERE sal &lt; 1500 OR sal &gt; 2850 ; -- 6、显示雇员代码为7566的雇员名及所在部门号SELECT ename , deptnoFROM empWHERE EMPNO = 7566 ;-- 7、显示部门代码为10和30中工资超过1500的雇员名及工资SELECT ename , salFROM empWHERE deptno in(10,30) AND sal &gt; 1500 ; -- 8、显示无管理者的雇员名及岗位SELECT ename , jobFROM empWHERE MGR IS NULL ;-- 9、显示所有雇员的平均工资、总计工资、最高工资、最低工资SELECT round(avg(sal),2) \"平均工资\" , sum(sal) 总计工资 , max(sal) 最高工资 , min(sal) 最低工资FROM emp ; -- 10、显示每种岗位的雇员总数、平均工资SELECT job 职位 , count(ename) 雇员总数 , round(avg(sal),2) 平均工资FROM empGROUP BY job ;-- 11、显示雇员总数，以及获得补助的雇员数SELECT count(ename) 雇员总数 , count(NULLIF(comm,0)) 补贴人数FROM emp ; -- 12、显示管理者的总人数SELECT COUNT (DISTINCT MGR)FROM emp ; -- 13、显示雇员工资的最大差额SELECT max(sal) - min(sal) 工资最大差额FROM emp ; -- 14、显示部门代码为20的部门号，以及该部门的所有雇员名、雇员工资及岗位SELECT deptno , ename , sal , jobFROM empWHERE deptno = 20 ; -- 15、显示获得补助的所有雇员名、补助额以及所在部门号SELECT ename , comm , deptnoFROM empWHERE comm &gt; 0 ; -- 16、显示所有雇员的姓名、部门编号、工资，并且列名要显示为中文SELECT ename 姓名 , deptno 部门编号 , sal 工资FROM emp ; -- 17、显示每个部门每个岗位的平均工资、每个部门的平均工资、每个岗位的平均工资SELECT deptno , job , avg(sal)FROM empGROUP BY deptno , job ;SELECT deptno , avg(sal)FROM empGROUP BY deptno ;SELECT job , avg(sal)FROM empGROUP BY job ; -- 18、显示工资大于1500的雇员名和工资，并且按照工资的降序排列SELECT ename , salFROM empWHERE sal &gt; 1500ORDER BY sal DESC ; -- 19、显示雇员部门编号为10或20的信息（要求使用IN关键字）SELECT *FROM deptWHERE deptno in(10,20) ; -- 20、显示雇员名的第二个字母为A的信息SELECT *FROM empWHERE substr(ename,2,1) = 'A' ; -- 21、显示没有发放补助的雇员信息SELECT *FROM empWHERE comm = 0 OR comm IS NULL; -- 22、显示雇员表中记录总数SELECT COUNT(*)FROM emp ; -- 23、显示所有雇员名、雇员工资及所在部门名SELECT e.ename , e.sal , d.dnameFROM emp e , dept dWHERE e.deptno = d.deptno ; -- 24、显示部门代码为20的部门名，以及该部门的所有雇员名、雇员工资及岗位SELECT d.dname , e.ename , e.sal , e.jobFROM dept d , emp eWHERE d.deptno = 20 AND e.deptno = 20 ; -- 25、显示所有雇员名、雇员工资及工资级别SELECT e.ename , e.sal , s.grade sal_levelFROM emp e , salgrade sWHERE e.sal BETWEEN s.losal AND s.hisal; -- 26、显示雇员“SCOTT”的管理者名SELECT enameFROM empWHERE empno = (SELECT mgr FROM emp WHERE ename = 'SCOTT') ; -- 27、显示获得补助的所有雇员名、补助额以及所在部门名SELECT e.ename , e.comm , d.dnameFROM emp e , dept dWHERE comm &gt; 0 ; -- 28、查询EMP表和SALGRADE表，显示部门代码为20的雇员名、工资及其工资级别SELECT e.ename , e.sal , s.gradeFROM emp e , salgrade sWHERE e.deptno = 20 AND e.sal BETWEEN s.losal AND s.hisal ; -- 29、显示部门代码为10的所有雇员名、部门名，以及其他部门名SELECT e.ename , d.dnameFROM emp eRIGHT JOIN dept d ON e.deptno = 10AND d.deptno = 10 ; -- 30、显示部门代码为10的所有雇员名、部门名，以及其他雇员名SELECT e.ename , d.dnameFROM emp eLEFT JOIN dept d ON e.deptno = 10AND d.deptno = 10 ;-- 31、显示部门代码为10的所有雇员名、部门名，以及其他部门名和雇员名SELECT e.ename , d.dnameFROM emp e , dept dWHERE e.deptno = d.deptno ; -- 32、显示\"BLAKE\"同部门的所有雇员，但不显示\"BLAKE\"SELECT enameFROM empWHERE deptno = (SELECT deptno FROM emp WHERE ename = 'BLAKE') AND ename != 'BLAKE'; -- 33、按以下格式显示下面的信息，条件是工资大于1500的。 部门名称 姓名 工资SELECT d.dname , e.ename , e.salFROM dept d , emp eWHERE d.deptno = e.deptno AND e.sal &gt; 1500 ; -- 34、按以下格式显示下面信息，条件是此人工资在所有人中最高。 部门 姓名 工资SELECT d.dname , e.ename , e.salFROM dept d , emp eWHERE d.deptno = e.deptno AND e.ename = (SELECT ename FROM emp WHERE sal = (SELECT max(sal) FROM emp)) ; -- 35、按以下格式显示下面信息 某人 为 某人 工作SELECT e.ename || '为' || mgr.ename || '工作' 工作关系FROM emp e , emp mgrWHERE mgr.empno = e.mgr ; -- 36、为所有人长工资，标准是：10部门长10%；20部门长15%；30部门长20%其他部门长18%（要求用DECODE函数）SELECT ename , sal , decode(deptno,10,sal*1.1,20,sal*1.15,30,sal*1.18) new_salFROM emp ; -- 37、根据工作年限长工资，标准是：为公司工作了几个月就长几个百分点。SELECT ename , sal , round(sal*(1+months_between(sysdate,hiredate)*0.01),2) new_salFROM emp ; -- 38、查询出king所在部门的部门号\\部门名称\\部门人数SELECT d.deptno 部门号, d.dname 部门名称, COUNT(e.ename) 部门人数FROM dept d, emp eWHERE e.deptno = d.deptnoGROUP BY d.deptno, d.dname HAVING d.deptno = (SELECT deptno FROM emp WHERE ename = 'KING'); -- 39、查询出king所在部门的工作年限最大的员工名字SELECT e.enameFROM emp eWHERE hiredate = (SELECT min(hiredate) FROM emp GROUP BY deptno HAVING deptno = (SELECT deptno FROM emp WHERE ename = 'KING')); -- 40、查询出管理员工人数最多的人的名字和他管理的人的名字SELECT mgr.ename, e.enameFROM emp mgr, emp eWHERE mgr.empno = e.mgr AND e.mgr = (SELECT mgr FROM emp GROUP BY mgr HAVING COUNT(mgr) &gt;= ALL (SELECT COUNT(mgr) FROM emp GROUP BY mgr)); -- 41、查询出工资成本最高的部门的部门号和部门名称SELECT e.deptno, d.dnameFROM emp e, dept dWHERE e.deptno = d.deptnoGROUP BY e.deptno, d.dname HAVING sum(e.sal) &gt;= (SELECT max(sum(sal)) FROM emp GROUP BY deptno) ; -- 42、查询出工资不超过2500的人数最多的部门名称SELECT d.dnameFROM dept dWHERE d.deptno = (SELECT deptno FROM emp GROUP BY deptno HAVING count(ename) = (SELECT max(count(ename)) FROM emp WHERE sal &lt; 2500 GROUP BY deptno)) -- 43、查询出没有下属员工的人的名字和他的职位SELECT e.ename, e.jobFROM emp e, (SELECT empno FROM emp minus SELECT DISTINCT mgr FROM emp) emWHERE e.empno = em.empno ; -- 44、查询出人数最多的那个部门的部门编号和部门名称SELECT e.deptno, d.dnameFROM emp e, dept dWHERE e.deptno = d.deptnoGROUP BY e.deptno, d.dname HAVING COUNT(empno) &gt;= (SELECT max(COUNT(empno)) FROM emp GROUP BY deptno) ; -- 45、查询出没有员工的那个部门的部门编号和部门名称(要求用两种方法,其中一种要用集合运算) --1 --2 集合SELECT d.deptno, d.dnameFROM dept d, (SELECT DISTINCT deptno FROM dept minus SELECT DISTINCT deptno FROM emp) deWHERE d.deptno = de.deptno; -- 46、查询出员工名字以A打头的人数最多的部门名称和员工名字SELECT d.dname, e.enameFROM dept d, emp eWHERE e.deptno = d.deptnoGROUP BY d.dname, e.ename HAVING e.ename LIKE 'A%'AND COUNT(e.ename) &gt;= (SELECT max(COUNT(ename)) FROM (SELECT ename, deptno FROM emp WHERE ename LIKE 'A%') GROUP BY deptno) ; -- 47、现在公司要给员工增加工龄工资,规则是:30*工作年限，请按以下格式显示下面结果: 部门名称 员工姓名 原工资 增加额度 新工资SELECT d.dname 部门名称, e.ename 员工姓名, e.sal 原工资, round(30 * (months_between(sysdate, e.hiredate) / 12)) 增加额度, round(e.sal + (1 + (30 * (months_between(sysdate, e.hiredate) / 12)))) 新工资FROM dept d, emp eWHERE e.deptno = d.deptno; -- 48、针对DEPT和EMP表，查询出下面格式的结果并要求按部门编号和工资降序排列。 部门名称 员工姓名 工资SELECT d.dname 部门名称 , e.ename 员工姓名 , e.sal 工资FROM dept d , emp eWHERE d.deptno = e.deptnoORDER BY e.deptno DESC , e.sal DESC ; -- 49、针对DEPT和EMP表，查询出下面格式的结果。 -- 部门编号 部门名称 部门工资最小值 部门工资最大值 部门工资平均值 部门工资合计值SELECT d.deptno 部门编号, d.dname 部门名称, min(e.sal) 部门工资最小值, max(e.sal) 部门工资最大值, round(avg(e.sal)) 部门工资平均值, sum(e.sal) 部门工资合计值FROM dept dLEFT JOIN emp e ON d.deptno = e.deptnoGROUP BY d.deptno , d.dnameORDER BY d.deptno; -- 50、针对DEPT和EMP表，查询出SMITH所在部门的部门名称、部门工资平均值。（要求使用子查询）SELECT d.dname, avg(e.sal)FROM dept d, emp eWHERE e.deptno = (SELECT deptno FROM emp WHERE ename = 'SMITH') AND d.deptno = e.deptnoGROUP BY d.dname; -- 51、针对DEPT和EMP表，查询出下面格式的结果。（要求使用外连接，没有员工的部门名也要显示。员工姓名如果是空值，要求用“不存在”代替；如果工资是空值，要求用0代替。） -- 部门名称 员工姓名 工资SELECT d.dname 部门名称 , nvl(e.ename,'不存在') 员工姓名 , nvl(e.sal,'0') 工资FROM dept dLEFT JOIN emp e ON d.deptno = e.deptno ; -- 52、针对DEPT和EMP表，查询出没有员工的部门号和部门名称（要求用两种方法） --1SELECT deptno , dnameFROM deptWHERE deptno = (SELECT DISTINCT deptno FROM dept minus SELECT DISTINCT deptno FROM emp) ; --2-- 53、查询出平均工资最高的部门编号、部门名称和平均工资。SELECT d.deptno 部门编号, d.dname 部门名称, round(avg(e.sal), 2) 平均工资FROM dept d, emp eWHERE d.deptno = e.deptnoGROUP BY d.deptno, d.dname HAVING avg(e.sal) = (SELECT max(avg(sal)) FROM emp GROUP BY deptno) ; -- 54、查询出工资高于全体平均工资人数最多的部门编号、部门名称和员工姓名、工资。SELECT d.deptno, d.dname, e.ename, e.salFROM dept d, emp eWHERE d.deptno = e.deptno AND e.sal &gt; (SELECT avg(sal) FROM emp) AND e.deptno = (SELECT deptno FROM (SELECT deptno, ename, sal FROM emp WHERE sal &gt; (SELECT avg(sal) FROM emp)) GROUP BY deptno HAVING COUNT(ename) = (SELECT max(COUNT(ename)) FROM (SELECT deptno, ename, sal FROM emp WHERE sal &gt; (SELECT avg(sal) FROM emp)) GROUP BY deptno)) ;","link":"/2019/10/01/oracle-practice-10-1/"}],"tags":[{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"oracle练习","slug":"oracle练习","link":"/tags/oracle练习/"}],"categories":[{"name":"oracle","slug":"oracle","link":"/categories/oracle/"}]}